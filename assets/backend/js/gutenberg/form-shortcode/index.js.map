{"version":3,"sources":["webpack://Drawflow/webpack/universalModuleDefinition","webpack://Drawflow/webpack/bootstrap","webpack://Drawflow/./node_modules/@wordpress/i18n/node_modules/sprintf-js/src/sprintf.js","webpack://Drawflow/external {\"root\":[\"wp\",\"blockEditor\"],\"commonjs\":\"@wordpress/blockEditor\",\"commonjs2\":\"@wordpress/blockEditor\",\"amd\":\"@wordpress/blockEditor\"}","webpack://Drawflow/external {\"root\":[\"wp\",\"components\"],\"commonjs\":\"@wordpress/components\",\"commonjs2\":\"@wordpress/components\",\"amd\":\"@wordpress/components\"}","webpack://Drawflow/external {\"root\":[\"wp\",\"blocks\"],\"commonjs\":\"@wordpress/blocks\",\"commonjs2\":\"@wordpress/blocks\",\"amd\":\"@wordpress/blocks\"}","webpack://Drawflow/./node_modules/@tannin/postfix/index.js","webpack://Drawflow/@wordpress/i18n/src/sprintf.js","webpack://Drawflow/./node_modules/memize/dist/index.js","webpack://Drawflow/./node_modules/@tannin/evaluate/index.js","webpack://Drawflow/./node_modules/@tannin/compile/index.js","webpack://Drawflow/./node_modules/tannin/index.js","webpack://Drawflow/./node_modules/@tannin/plural-forms/index.js","webpack://Drawflow/@wordpress/i18n/src/create-i18n.js","webpack://Drawflow/@wordpress/hooks/src/validateNamespace.js","webpack://Drawflow/@wordpress/hooks/src/validateHookName.js","webpack://Drawflow/@wordpress/hooks/src/createAddHook.js","webpack://Drawflow/@wordpress/hooks/src/createRemoveHook.js","webpack://Drawflow/@wordpress/hooks/src/createHasHook.js","webpack://Drawflow/@wordpress/hooks/src/createRunHook.js","webpack://Drawflow/@wordpress/hooks/src/createCurrentHook.js","webpack://Drawflow/@wordpress/hooks/src/createDoingHook.js","webpack://Drawflow/@wordpress/hooks/src/createDidHook.js","webpack://Drawflow/@wordpress/hooks/src/createHooks.js","webpack://Drawflow/@wordpress/hooks/src/index.js","webpack://Drawflow/@wordpress/i18n/src/default-i18n.js","webpack://Drawflow/./assets_src/gutenberg/form-shortcode/edit.js","webpack://Drawflow/./assets_src/gutenberg/form-shortcode/index.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","text","modulo","placeholder","key_access","index_access","sign","sprintf","sprintf_format","sprintf_parse","arguments","vsprintf","fmt","argv","apply","concat","parse_tree","arg","k","ph","pad","pad_character","pad_length","is_positive","cursor","tree_length","length","output","keys","undefined","Error","param_no","test","type","Function","isNaN","TypeError","parseInt","toString","String","fromCharCode","JSON","stringify","width","precision","parseFloat","toExponential","toFixed","Number","toPrecision","substring","slice","toLowerCase","valueOf","toUpperCase","replace","pad_char","charAt","repeat","align","sprintf_cache","match","_fmt","arg_names","exec","push","SyntaxError","field_list","replacement_field","field_match","window","PRECEDENCE","OPENERS","TERMINATORS","PATTERN","logErrorOnce","fn","options","head","tail","size","memoized","args","node","len","searchCache","next","prev","val","Array","maxSize","clear","memoize","console","error","OPERATORS","a","b","compile","expression","terms","operator","term","element","stack","substr","index","trim","pop","indexOf","reverse","postfix","variables","j","getOperatorResult","earlyReturn","DEFAULT_OPTIONS","contextDelimiter","onMissingKey","Tannin","data","pluralForms","getPluralForm","domain","config","plural","pf","evaluate","plural_forms","parts","part","split","getPluralExpression","dcnpgettext","context","singular","entry","DEFAULT_LOCALE_DATA","I18N_HOOK_REGEXP","validateNamespace","namespace","validateHookName","hookName","createAddHook","hooks","storeKey","callback","priority","hooksStore","handler","handlers","splice","__current","forEach","hookInfo","currentIndex","runs","doAction","createRemoveHook","removeAll","handlersRemoved","createHasHook","some","hook","createRunHook","returnFirstArg","async","asyncRunner","add","result","delete","syncRunner","createCurrentHook","from","at","currentArray","createDoingHook","createDidHook","_Hooks","constructor","actions","Set","filters","addAction","addFilter","removeAction","removeFilter","hasAction","hasFilter","removeAllActions","removeAllFilters","doActionAsync","applyFilters","applyFiltersAsync","currentAction","currentFilter","doingAction","doingFilter","didAction","didFilter","createHooks","defaultHooks","i18n","createI18n","initialData","initialDomain","tannin","listeners","notifyListeners","listener","doSetLocaleData","setLocaleData","single","getFilterDomain","_x","translation","onHookAddedOrRemoved","getLocaleData","addLocaleData","resetLocaleData","subscribe","__","_n","_nx","isRTL","hasTranslation","zigaformData","forms","registerBlockType","edit","attributes","setAttributes","formId","blockProps","useBlockProps","selectedForm","find","f","id","title","label","map","onChange","format","sprintfjs","save"],"mappings":"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","file":"gutenberg/form-shortcode/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@wordpress/blockEditor\"), require(\"@wordpress/components\"), require(\"@wordpress/blocks\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@wordpress/blockEditor\", \"@wordpress/components\", \"@wordpress/blocks\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Drawflow\"] = factory(require(\"@wordpress/blockEditor\"), require(\"@wordpress/components\"), require(\"@wordpress/blocks\"));\n\telse\n\t\troot[\"Drawflow\"] = factory(root[\"wp\"][\"blockEditor\"], root[\"wp\"][\"components\"], root[\"wp\"][\"blocks\"]);\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__5__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","var PRECEDENCE, OPENERS, TERMINATORS, PATTERN;\n\n/**\n * Operator precedence mapping.\n *\n * @type {Object}\n */\nPRECEDENCE = {\n\t'(': 9,\n\t'!': 8,\n\t'*': 7,\n\t'/': 7,\n\t'%': 7,\n\t'+': 6,\n\t'-': 6,\n\t'<': 5,\n\t'<=': 5,\n\t'>': 5,\n\t'>=': 5,\n\t'==': 4,\n\t'!=': 4,\n\t'&&': 3,\n\t'||': 2,\n\t'?': 1,\n\t'?:': 1,\n};\n\n/**\n * Characters which signal pair opening, to be terminated by terminators.\n *\n * @type {string[]}\n */\nOPENERS = [ '(', '?' ];\n\n/**\n * Characters which signal pair termination, the value an array with the\n * opener as its first member. The second member is an optional operator\n * replacement to push to the stack.\n *\n * @type {string[]}\n */\nTERMINATORS = {\n\t')': [ '(' ],\n\t':': [ '?', '?:' ],\n};\n\n/**\n * Pattern matching operators and openers.\n *\n * @type {RegExp}\n */\nPATTERN = /<=|>=|==|!=|&&|\\|\\||\\?:|\\(|!|\\*|\\/|%|\\+|-|<|>|\\?|\\)|:/;\n\n/**\n * Given a C expression, returns the equivalent postfix (Reverse Polish)\n * notation terms as an array.\n *\n * If a postfix string is desired, simply `.join( ' ' )` the result.\n *\n * @example\n *\n * ```js\n * import postfix from '@tannin/postfix';\n *\n * postfix( 'n > 1' );\n * // ⇒ [ 'n', '1', '>' ]\n * ```\n *\n * @param {string} expression C expression.\n *\n * @return {string[]} Postfix terms.\n */\nexport default function postfix( expression ) {\n\tvar terms = [],\n\t\tstack = [],\n\t\tmatch, operator, term, element;\n\n\twhile ( ( match = expression.match( PATTERN ) ) ) {\n\t\toperator = match[ 0 ];\n\n\t\t// Term is the string preceding the operator match. It may contain\n\t\t// whitespace, and may be empty (if operator is at beginning).\n\t\tterm = expression.substr( 0, match.index ).trim();\n\t\tif ( term ) {\n\t\t\tterms.push( term );\n\t\t}\n\n\t\twhile ( ( element = stack.pop() ) ) {\n\t\t\tif ( TERMINATORS[ operator ] ) {\n\t\t\t\tif ( TERMINATORS[ operator ][ 0 ] === element ) {\n\t\t\t\t\t// Substitution works here under assumption that because\n\t\t\t\t\t// the assigned operator will no longer be a terminator, it\n\t\t\t\t\t// will be pushed to the stack during the condition below.\n\t\t\t\t\toperator = TERMINATORS[ operator ][ 1 ] || operator;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if ( OPENERS.indexOf( element ) >= 0 || PRECEDENCE[ element ] < PRECEDENCE[ operator ] ) {\n\t\t\t\t// Push to stack if either an opener or when pop reveals an\n\t\t\t\t// element of lower precedence.\n\t\t\t\tstack.push( element );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// For each popped from stack, push to terms.\n\t\t\tterms.push( element );\n\t\t}\n\n\t\tif ( ! TERMINATORS[ operator ] ) {\n\t\t\tstack.push( operator );\n\t\t}\n\n\t\t// Slice matched fragment from expression to continue match.\n\t\texpression = expression.substr( match.index + operator.length );\n\t}\n\n\t// Push remainder of operand, if exists, to terms.\n\texpression = expression.trim();\n\tif ( expression ) {\n\t\tterms.push( expression );\n\t}\n\n\t// Pop remaining items from stack into terms.\n\treturn terms.concat( stack.reverse() );\n}\n","/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport sprintfjs from 'sprintf-js';\n\n/**\n * Log to console, once per message; or more precisely, per referentially equal\n * argument set. Because Jed throws errors, we log these to the console instead\n * to avoid crashing the application.\n *\n * @param {...*} args Arguments to pass to `console.error`\n */\nconst logErrorOnce = memoize( console.error ); // eslint-disable-line no-console\n\n/**\n * Returns a formatted string. If an error occurs in applying the format, the\n * original format string is returned.\n *\n * @param {string} format The format of the string to generate.\n * @param {...*}   args   Arguments to apply to the format.\n *\n * @see https://www.npmjs.com/package/sprintf-js\n *\n * @return {string} The formatted string.\n */\nexport function sprintf( format, ...args ) {\n\ttry {\n\t\treturn sprintfjs.sprintf( format, ...args );\n\t} catch ( error ) {\n\t\tif ( error instanceof Error ) {\n\t\t\tlogErrorOnce( 'sprintf error: \\n\\n' + error.toString() );\n\t\t}\n\t\treturn format;\n\t}\n}\n","/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {(...args: any[]) => any} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {((...args: Parameters<F>) => ReturnType<F>) & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize(fn, options) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized(/* ...args */) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs,\n\t\t\ti;\n\n\t\tsearchCache: while (node) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif (node.args.length !== arguments.length) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (node.args[i] !== arguments[i]) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== head) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif (node === tail) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ (head).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply(null, args),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (head) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif (size === /** @type {MemizeOptions} */ (options).maxSize) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ (tail).prev;\n\t\t\t/** @type {MemizeCacheNode} */ (tail).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function () {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nexport { memize as default };\n","/**\n * Operator callback functions.\n *\n * @type {Object}\n */\nvar OPERATORS = {\n\t'!': function( a ) {\n\t\treturn ! a;\n\t},\n\t'*': function( a, b ) {\n\t\treturn a * b;\n\t},\n\t'/': function( a, b ) {\n\t\treturn a / b;\n\t},\n\t'%': function( a, b ) {\n\t\treturn a % b;\n\t},\n\t'+': function( a, b ) {\n\t\treturn a + b;\n\t},\n\t'-': function( a, b ) {\n\t\treturn a - b;\n\t},\n\t'<': function( a, b ) {\n\t\treturn a < b;\n\t},\n\t'<=': function( a, b ) {\n\t\treturn a <= b;\n\t},\n\t'>': function( a, b ) {\n\t\treturn a > b;\n\t},\n\t'>=': function( a, b ) {\n\t\treturn a >= b;\n\t},\n\t'==': function( a, b ) {\n\t\treturn a === b;\n\t},\n\t'!=': function( a, b ) {\n\t\treturn a !== b;\n\t},\n\t'&&': function( a, b ) {\n\t\treturn a && b;\n\t},\n\t'||': function( a, b ) {\n\t\treturn a || b;\n\t},\n\t'?:': function( a, b, c ) {\n\t\tif ( a ) {\n\t\t\tthrow b;\n\t\t}\n\n\t\treturn c;\n\t},\n};\n\n/**\n * Given an array of postfix terms and operand variables, returns the result of\n * the postfix evaluation.\n *\n * @example\n *\n * ```js\n * import evaluate from '@tannin/evaluate';\n *\n * // 3 + 4 * 5 / 6 ⇒ '3 4 5 * 6 / +'\n * const terms = [ '3', '4', '5', '*', '6', '/', '+' ];\n *\n * evaluate( terms, {} );\n * // ⇒ 6.333333333333334\n * ```\n *\n * @param {string[]} postfix   Postfix terms.\n * @param {Object}   variables Operand variables.\n *\n * @return {*} Result of evaluation.\n */\nexport default function evaluate( postfix, variables ) {\n\tvar stack = [],\n\t\ti, j, args, getOperatorResult, term, value;\n\n\tfor ( i = 0; i < postfix.length; i++ ) {\n\t\tterm = postfix[ i ];\n\n\t\tgetOperatorResult = OPERATORS[ term ];\n\t\tif ( getOperatorResult ) {\n\t\t\t// Pop from stack by number of function arguments.\n\t\t\tj = getOperatorResult.length;\n\t\t\targs = Array( j );\n\t\t\twhile ( j-- ) {\n\t\t\t\targs[ j ] = stack.pop();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tvalue = getOperatorResult.apply( null, args );\n\t\t\t} catch ( earlyReturn ) {\n\t\t\t\treturn earlyReturn;\n\t\t\t}\n\t\t} else if ( variables.hasOwnProperty( term ) ) {\n\t\t\tvalue = variables[ term ];\n\t\t} else {\n\t\t\tvalue = +term;\n\t\t}\n\n\t\tstack.push( value );\n\t}\n\n\treturn stack[ 0 ];\n}\n","import postfix from '@tannin/postfix';\nimport evaluate from '@tannin/evaluate';\n\n/**\n * Given a C expression, returns a function which can be called to evaluate its\n * result.\n *\n * @example\n *\n * ```js\n * import compile from '@tannin/compile';\n *\n * const evaluate = compile( 'n > 1' );\n *\n * evaluate( { n: 2 } );\n * // ⇒ true\n * ```\n *\n * @param {string} expression C expression.\n *\n * @return {(variables?:{[variable:string]:*})=>*} Compiled evaluator.\n */\nexport default function compile( expression ) {\n\tvar terms = postfix( expression );\n\n\treturn function( variables ) {\n\t\treturn evaluate( terms, variables );\n\t};\n}\n","import pluralForms from '@tannin/plural-forms';\n\n/**\n * Tannin constructor options.\n *\n * @typedef {Object} TanninOptions\n *\n * @property {string}   [contextDelimiter] Joiner in string lookup with context.\n * @property {Function} [onMissingKey]     Callback to invoke when key missing.\n */\n\n/**\n * Domain metadata.\n *\n * @typedef {Object} TanninDomainMetadata\n *\n * @property {string}            [domain]       Domain name.\n * @property {string}            [lang]         Language code.\n * @property {(string|Function)} [plural_forms] Plural forms expression or\n *                                              function evaluator.\n */\n\n/**\n * Domain translation pair respectively representing the singular and plural\n * translation.\n *\n * @typedef {[string,string]} TanninTranslation\n */\n\n/**\n * Locale data domain. The key is used as reference for lookup, the value an\n * array of two string entries respectively representing the singular and plural\n * translation.\n *\n * @typedef {{[key:string]:TanninDomainMetadata|TanninTranslation,'':TanninDomainMetadata|TanninTranslation}} TanninLocaleDomain\n */\n\n/**\n * Jed-formatted locale data.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @typedef {{[domain:string]:TanninLocaleDomain}} TanninLocaleData\n */\n\n/**\n * Default Tannin constructor options.\n *\n * @type {TanninOptions}\n */\nvar DEFAULT_OPTIONS = {\n\tcontextDelimiter: '\\u0004',\n\tonMissingKey: null,\n};\n\n/**\n * Given a specific locale data's config `plural_forms` value, returns the\n * expression.\n *\n * @example\n *\n * ```\n * getPluralExpression( 'nplurals=2; plural=(n != 1);' ) === '(n != 1)'\n * ```\n *\n * @param {string} pf Locale data plural forms.\n *\n * @return {string} Plural forms expression.\n */\nfunction getPluralExpression( pf ) {\n\tvar parts, i, part;\n\n\tparts = pf.split( ';' );\n\n\tfor ( i = 0; i < parts.length; i++ ) {\n\t\tpart = parts[ i ].trim();\n\t\tif ( part.indexOf( 'plural=' ) === 0 ) {\n\t\t\treturn part.substr( 7 );\n\t\t}\n\t}\n}\n\n/**\n * Tannin constructor.\n *\n * @class\n *\n * @param {TanninLocaleData} data      Jed-formatted locale data.\n * @param {TanninOptions}    [options] Tannin options.\n */\nexport default function Tannin( data, options ) {\n\tvar key;\n\n\t/**\n\t * Jed-formatted locale data.\n\t *\n\t * @name Tannin#data\n\t * @type {TanninLocaleData}\n\t */\n\tthis.data = data;\n\n\t/**\n\t * Plural forms function cache, keyed by plural forms string.\n\t *\n\t * @name Tannin#pluralForms\n\t * @type {Object<string,Function>}\n\t */\n\tthis.pluralForms = {};\n\n\t/**\n\t * Effective options for instance, including defaults.\n\t *\n\t * @name Tannin#options\n\t * @type {TanninOptions}\n\t */\n\tthis.options = {};\n\n\tfor ( key in DEFAULT_OPTIONS ) {\n\t\tthis.options[ key ] = options !== undefined && key in options\n\t\t\t? options[ key ]\n\t\t\t: DEFAULT_OPTIONS[ key ];\n\t}\n}\n\n/**\n * Returns the plural form index for the given domain and value.\n *\n * @param {string} domain Domain on which to calculate plural form.\n * @param {number} n      Value for which plural form is to be calculated.\n *\n * @return {number} Plural form index.\n */\nTannin.prototype.getPluralForm = function( domain, n ) {\n\tvar getPluralForm = this.pluralForms[ domain ],\n\t\tconfig, plural, pf;\n\n\tif ( ! getPluralForm ) {\n\t\tconfig = this.data[ domain ][ '' ];\n\n\t\tpf = (\n\t\t\tconfig[ 'Plural-Forms' ] ||\n\t\t\tconfig[ 'plural-forms' ] ||\n\t\t\t// Ignore reason: As known, there's no way to document the empty\n\t\t\t// string property on a key to guarantee this as metadata.\n\t\t\t// @ts-ignore\n\t\t\tconfig.plural_forms\n\t\t);\n\n\t\tif ( typeof pf !== 'function' ) {\n\t\t\tplural = getPluralExpression(\n\t\t\t\tconfig[ 'Plural-Forms' ] ||\n\t\t\t\tconfig[ 'plural-forms' ] ||\n\t\t\t\t// Ignore reason: As known, there's no way to document the empty\n\t\t\t\t// string property on a key to guarantee this as metadata.\n\t\t\t\t// @ts-ignore\n\t\t\t\tconfig.plural_forms\n\t\t\t);\n\n\t\t\tpf = pluralForms( plural );\n\t\t}\n\n\t\tgetPluralForm = this.pluralForms[ domain ] = pf;\n\t}\n\n\treturn getPluralForm( n );\n};\n\n/**\n * Translate a string.\n *\n * @param {string}      domain   Translation domain.\n * @param {string|void} context  Context distinguishing terms of the same name.\n * @param {string}      singular Primary key for translation lookup.\n * @param {string=}     plural   Fallback value used for non-zero plural\n *                               form index.\n * @param {number=}     n        Value to use in calculating plural form.\n *\n * @return {string} Translated string.\n */\nTannin.prototype.dcnpgettext = function( domain, context, singular, plural, n ) {\n\tvar index, key, entry;\n\n\tif ( n === undefined ) {\n\t\t// Default to singular.\n\t\tindex = 0;\n\t} else {\n\t\t// Find index by evaluating plural form for value.\n\t\tindex = this.getPluralForm( domain, n );\n\t}\n\n\tkey = singular;\n\n\t// If provided, context is prepended to key with delimiter.\n\tif ( context ) {\n\t\tkey = context + this.options.contextDelimiter + singular;\n\t}\n\n\tentry = this.data[ domain ][ key ];\n\n\t// Verify not only that entry exists, but that the intended index is within\n\t// range and non-empty.\n\tif ( entry && entry[ index ] ) {\n\t\treturn entry[ index ];\n\t}\n\n\tif ( this.options.onMissingKey ) {\n\t\tthis.options.onMissingKey( singular, domain );\n\t}\n\n\t// If entry not found, fall back to singular vs. plural with zero index\n\t// representing the singular value.\n\treturn index === 0 ? singular : plural;\n};\n","import compile from '@tannin/compile';\n\n/**\n * Given a C expression, returns a function which, when called with a value,\n * evaluates the result with the value assumed to be the \"n\" variable of the\n * expression. The result will be coerced to its numeric equivalent.\n *\n * @param {string} expression C expression.\n *\n * @return {Function} Evaluator function.\n */\nexport default function pluralForms( expression ) {\n\tvar evaluate = compile( expression );\n\n\treturn function( n ) {\n\t\treturn +evaluate( { n: n } );\n\t};\n}\n","/**\n * External dependencies\n */\nimport Tannin from 'tannin';\n\n/**\n * @typedef {Record<string,any>} LocaleData\n */\n\n/**\n * Default locale data to use for Tannin domain when not otherwise provided.\n * Assumes an English plural forms expression.\n *\n * @type {LocaleData}\n */\nconst DEFAULT_LOCALE_DATA = {\n\t'': {\n\t\t/** @param {number} n */\n\t\tplural_forms( n ) {\n\t\t\treturn n === 1 ? 0 : 1;\n\t\t},\n\t},\n};\n\n/*\n * Regular expression that matches i18n hooks like `i18n.gettext`, `i18n.ngettext`,\n * `i18n.gettext_domain` or `i18n.ngettext_with_context` or `i18n.has_translation`.\n */\nconst I18N_HOOK_REGEXP = /^i18n\\.(n?gettext|has_translation)(_|$)/;\n\n/**\n * @typedef {(domain?: string) => LocaleData} GetLocaleData\n *\n * Returns locale data by domain in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} SetLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will overwrite the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} AddLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will also merge the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} ResetLocaleData\n *\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/** @typedef {() => void} SubscribeCallback */\n/** @typedef {() => void} UnsubscribeCallback */\n/**\n * @typedef {(callback: SubscribeCallback) => UnsubscribeCallback} Subscribe\n *\n * Subscribes to changes of locale data\n */\n/**\n * @typedef {(domain?: string) => string} GetFilterDomain\n * Retrieve the domain to use when calling domain-specific filters.\n */\n/**\n * @typedef {(text: string, domain?: string) => string} __\n *\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n */\n/**\n * @typedef {(text: string, context: string, domain?: string) => string} _x\n *\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n */\n/**\n * @typedef {(single: string, plural: string, number: number, domain?: string) => string} _n\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n */\n/**\n * @typedef {(single: string, plural: string, number: number, context: string, domain?: string) => string} _nx\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n */\n/**\n * @typedef {() => boolean} IsRtl\n *\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n */\n/**\n * @typedef {(single: string, context?: string, domain?: string) => boolean} HasTranslation\n *\n * Check if there is a translation for a given string in singular form.\n */\n/** @typedef {import('@wordpress/hooks').Hooks} Hooks */\n\n/**\n * An i18n instance\n *\n * @typedef I18n\n * @property {GetLocaleData}   getLocaleData   Returns locale data by domain in a Jed-formatted JSON object shape.\n * @property {SetLocaleData}   setLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will overwrite the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {AddLocaleData}   addLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will also merge the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {ResetLocaleData} resetLocaleData Resets all current Tannin instance locale data and sets the specified\n *                                             locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n * @property {Subscribe}       subscribe       Subscribes to changes of Tannin locale data.\n * @property {__}              __              Retrieve the translation of text.\n * @property {_x}              _x              Retrieve translated string with gettext context.\n * @property {_n}              _n              Translates and retrieves the singular or plural form based on the supplied\n *                                             number.\n * @property {_nx}             _nx             Translates and retrieves the singular or plural form based on the supplied\n *                                             number, with gettext context.\n * @property {IsRtl}           isRTL           Check if current locale is RTL.\n * @property {HasTranslation}  hasTranslation  Check if there is a translation for a given string.\n */\n\n/**\n * Create an i18n instance\n *\n * @param {LocaleData} [initialData]   Locale data configuration.\n * @param {string}     [initialDomain] Domain for which configuration applies.\n * @param {Hooks}      [hooks]         Hooks implementation.\n *\n * @return {I18n} I18n instance.\n */\nexport const createI18n = ( initialData, initialDomain, hooks ) => {\n\t/**\n\t * The underlying instance of Tannin to which exported functions interface.\n\t *\n\t * @type {Tannin}\n\t */\n\tconst tannin = new Tannin( {} );\n\n\tconst listeners = new Set();\n\n\tconst notifyListeners = () => {\n\t\tlisteners.forEach( ( listener ) => listener() );\n\t};\n\n\t/**\n\t * Subscribe to changes of locale data.\n\t *\n\t * @param {SubscribeCallback} callback Subscription callback.\n\t * @return {UnsubscribeCallback} Unsubscribe callback.\n\t */\n\tconst subscribe = ( callback ) => {\n\t\tlisteners.add( callback );\n\t\treturn () => listeners.delete( callback );\n\t};\n\n\t/** @type {GetLocaleData} */\n\tconst getLocaleData = ( domain = 'default' ) => tannin.data[ domain ];\n\n\t/**\n\t * @param {LocaleData} [data]\n\t * @param {string}     [domain]\n\t */\n\tconst doSetLocaleData = ( data, domain = 'default' ) => {\n\t\ttannin.data[ domain ] = {\n\t\t\t...tannin.data[ domain ],\n\t\t\t...data,\n\t\t};\n\n\t\t// Populate default domain configuration (supported locale date which omits\n\t\t// a plural forms expression).\n\t\ttannin.data[ domain ][ '' ] = {\n\t\t\t...DEFAULT_LOCALE_DATA[ '' ],\n\t\t\t...tannin.data[ domain ]?.[ '' ],\n\t\t};\n\n\t\t// Clean up cached plural forms functions cache as it might be updated.\n\t\tdelete tannin.pluralForms[ domain ];\n\t};\n\n\t/** @type {SetLocaleData} */\n\tconst setLocaleData = ( data, domain ) => {\n\t\tdoSetLocaleData( data, domain );\n\t\tnotifyListeners();\n\t};\n\n\t/** @type {AddLocaleData} */\n\tconst addLocaleData = ( data, domain = 'default' ) => {\n\t\ttannin.data[ domain ] = {\n\t\t\t...tannin.data[ domain ],\n\t\t\t...data,\n\t\t\t// Populate default domain configuration (supported locale date which omits\n\t\t\t// a plural forms expression).\n\t\t\t'': {\n\t\t\t\t...DEFAULT_LOCALE_DATA[ '' ],\n\t\t\t\t...tannin.data[ domain ]?.[ '' ],\n\t\t\t\t...data?.[ '' ],\n\t\t\t},\n\t\t};\n\n\t\t// Clean up cached plural forms functions cache as it might be updated.\n\t\tdelete tannin.pluralForms[ domain ];\n\n\t\tnotifyListeners();\n\t};\n\n\t/** @type {ResetLocaleData} */\n\tconst resetLocaleData = ( data, domain ) => {\n\t\t// Reset all current Tannin locale data.\n\t\ttannin.data = {};\n\n\t\t// Reset cached plural forms functions cache.\n\t\ttannin.pluralForms = {};\n\n\t\tsetLocaleData( data, domain );\n\t};\n\n\t/**\n\t * Wrapper for Tannin's `dcnpgettext`. Populates default locale data if not\n\t * otherwise previously assigned.\n\t *\n\t * @param {string|undefined} domain   Domain to retrieve the translated text.\n\t * @param {string|undefined} context  Context information for the translators.\n\t * @param {string}           single   Text to translate if non-plural. Used as\n\t *                                    fallback return value on a caught error.\n\t * @param {string}           [plural] The text to be used if the number is\n\t *                                    plural.\n\t * @param {number}           [number] The number to compare against to use\n\t *                                    either the singular or plural form.\n\t *\n\t * @return {string} The translated string.\n\t */\n\tconst dcnpgettext = (\n\t\tdomain = 'default',\n\t\tcontext,\n\t\tsingle,\n\t\tplural,\n\t\tnumber\n\t) => {\n\t\tif ( ! tannin.data[ domain ] ) {\n\t\t\t// Use `doSetLocaleData` to set silently, without notifying listeners.\n\t\t\tdoSetLocaleData( undefined, domain );\n\t\t}\n\n\t\treturn tannin.dcnpgettext( domain, context, single, plural, number );\n\t};\n\n\t/** @type {GetFilterDomain} */\n\tconst getFilterDomain = ( domain = 'default' ) => domain;\n\n\t/** @type {__} */\n\tconst __ = ( text, domain ) => {\n\t\tlet translation = dcnpgettext( domain, undefined, text );\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters text with its translation.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} text        Text to translate.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext',\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {_x} */\n\tconst _x = ( text, context, domain ) => {\n\t\tlet translation = dcnpgettext( domain, context, text );\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters text with its translation based on context information.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} text        Text to translate.\n\t\t * @param {string} context     Context information for the translators.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext_with_context',\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext_with_context_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {_n} */\n\tconst _n = ( single, plural, number, domain ) => {\n\t\tlet translation = dcnpgettext(\n\t\t\tdomain,\n\t\t\tundefined,\n\t\t\tsingle,\n\t\t\tplural,\n\t\t\tnumber\n\t\t);\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters the singular or plural form of a string.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} single      The text to be used if the number is singular.\n\t\t * @param {string} plural      The text to be used if the number is plural.\n\t\t * @param {string} number      The number to compare against to use either the singular or plural form.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext',\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {_nx} */\n\tconst _nx = ( single, plural, number, context, domain ) => {\n\t\tlet translation = dcnpgettext(\n\t\t\tdomain,\n\t\t\tcontext,\n\t\t\tsingle,\n\t\t\tplural,\n\t\t\tnumber\n\t\t);\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters the singular or plural form of a string with gettext context.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} single      The text to be used if the number is singular.\n\t\t * @param {string} plural      The text to be used if the number is plural.\n\t\t * @param {string} number      The number to compare against to use either the singular or plural form.\n\t\t * @param {string} context     Context information for the translators.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext_with_context',\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext_with_context_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {IsRtl} */\n\tconst isRTL = () => {\n\t\treturn 'rtl' === _x( 'ltr', 'text direction' );\n\t};\n\n\t/** @type {HasTranslation} */\n\tconst hasTranslation = ( single, context, domain ) => {\n\t\tconst key = context ? context + '\\u0004' + single : single;\n\t\tlet result = !! tannin.data?.[ domain ?? 'default' ]?.[ key ];\n\t\tif ( hooks ) {\n\t\t\t/**\n\t\t\t * Filters the presence of a translation in the locale data.\n\t\t\t *\n\t\t\t * @param {boolean} hasTranslation Whether the translation is present or not..\n\t\t\t * @param {string}  single         The singular form of the translated text (used as key in locale data)\n\t\t\t * @param {string}  context        Context information for the translators.\n\t\t\t * @param {string}  domain         Text domain. Unique identifier for retrieving translated strings.\n\t\t\t */\n\t\t\tresult = /** @type { boolean } */ (\n\t\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t\t'i18n.has_translation',\n\t\t\t\t\tresult,\n\t\t\t\t\tsingle,\n\t\t\t\t\tcontext,\n\t\t\t\t\tdomain\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tresult = /** @type { boolean } */ (\n\t\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t\t'i18n.has_translation_' + getFilterDomain( domain ),\n\t\t\t\t\tresult,\n\t\t\t\t\tsingle,\n\t\t\t\t\tcontext,\n\t\t\t\t\tdomain\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn result;\n\t};\n\n\tif ( initialData ) {\n\t\tsetLocaleData( initialData, initialDomain );\n\t}\n\n\tif ( hooks ) {\n\t\t/**\n\t\t * @param {string} hookName\n\t\t */\n\t\tconst onHookAddedOrRemoved = ( hookName ) => {\n\t\t\tif ( I18N_HOOK_REGEXP.test( hookName ) ) {\n\t\t\t\tnotifyListeners();\n\t\t\t}\n\t\t};\n\n\t\thooks.addAction( 'hookAdded', 'core/i18n', onHookAddedOrRemoved );\n\t\thooks.addAction( 'hookRemoved', 'core/i18n', onHookAddedOrRemoved );\n\t}\n\n\treturn {\n\t\tgetLocaleData,\n\t\tsetLocaleData,\n\t\taddLocaleData,\n\t\tresetLocaleData,\n\t\tsubscribe,\n\t\t__,\n\t\t_x,\n\t\t_n,\n\t\t_nx,\n\t\tisRTL,\n\t\thasTranslation,\n\t};\n};\n","/**\n * Validate a namespace string.\n *\n * @param {string} namespace The namespace to validate - should take the form\n *                           `vendor/plugin/function`.\n *\n * @return {boolean} Whether the namespace is valid.\n */\nfunction validateNamespace( namespace ) {\n\tif ( 'string' !== typeof namespace || '' === namespace ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error( 'The namespace must be a non-empty string.' );\n\t\treturn false;\n\t}\n\n\tif ( ! /^[a-zA-Z][a-zA-Z0-9_.\\-\\/]*$/.test( namespace ) ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(\n\t\t\t'The namespace can only contain numbers, letters, dashes, periods, underscores and slashes.'\n\t\t);\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport default validateNamespace;\n","/**\n * Validate a hookName string.\n *\n * @param {string} hookName The hook name to validate. Should be a non empty string containing\n *                          only numbers, letters, dashes, periods and underscores. Also,\n *                          the hook name cannot begin with `__`.\n *\n * @return {boolean} Whether the hook name is valid.\n */\nfunction validateHookName( hookName ) {\n\tif ( 'string' !== typeof hookName || '' === hookName ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error( 'The hook name must be a non-empty string.' );\n\t\treturn false;\n\t}\n\n\tif ( /^__/.test( hookName ) ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error( 'The hook name cannot begin with `__`.' );\n\t\treturn false;\n\t}\n\n\tif ( ! /^[a-zA-Z][a-zA-Z0-9_.-]*$/.test( hookName ) ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(\n\t\t\t'The hook name can only contain numbers, letters, dashes, periods and underscores.'\n\t\t);\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport default validateHookName;\n","/**\n * Internal dependencies\n */\nimport validateNamespace from './validateNamespace.js';\nimport validateHookName from './validateHookName.js';\n\n/**\n * @callback AddHook\n *\n * Adds the hook to the appropriate hooks container.\n *\n * @param {string}               hookName      Name of hook to add\n * @param {string}               namespace     The unique namespace identifying the callback in the form `vendor/plugin/function`.\n * @param {import('.').Callback} callback      Function to call when the hook is run\n * @param {number}               [priority=10] Priority of this hook\n */\n\n/**\n * Returns a function which, when invoked, will add a hook.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {AddHook} Function that adds a new hook.\n */\nfunction createAddHook( hooks, storeKey ) {\n\treturn function addHook( hookName, namespace, callback, priority = 10 ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\tif ( ! validateHookName( hookName ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! validateNamespace( namespace ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'function' !== typeof callback ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error( 'The hook callback must be a function.' );\n\t\t\treturn;\n\t\t}\n\n\t\t// Validate numeric priority\n\t\tif ( 'number' !== typeof priority ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(\n\t\t\t\t'If specified, the hook priority must be a number.'\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = { callback, priority, namespace };\n\n\t\tif ( hooksStore[ hookName ] ) {\n\t\t\t// Find the correct insert index of the new hook.\n\t\t\tconst handlers = hooksStore[ hookName ].handlers;\n\n\t\t\t/** @type {number} */\n\t\t\tlet i;\n\t\t\tfor ( i = handlers.length; i > 0; i-- ) {\n\t\t\t\tif ( priority >= handlers[ i - 1 ].priority ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( i === handlers.length ) {\n\t\t\t\t// If append, operate via direct assignment.\n\t\t\t\thandlers[ i ] = handler;\n\t\t\t} else {\n\t\t\t\t// Otherwise, insert before index via splice.\n\t\t\t\thandlers.splice( i, 0, handler );\n\t\t\t}\n\n\t\t\t// We may also be currently executing this hook.  If the callback\n\t\t\t// we're adding would come after the current callback, there's no\n\t\t\t// problem; otherwise we need to increase the execution index of\n\t\t\t// any other runs by 1 to account for the added element.\n\t\t\thooksStore.__current.forEach( ( hookInfo ) => {\n\t\t\t\tif (\n\t\t\t\t\thookInfo.name === hookName &&\n\t\t\t\t\thookInfo.currentIndex >= i\n\t\t\t\t) {\n\t\t\t\t\thookInfo.currentIndex++;\n\t\t\t\t}\n\t\t\t} );\n\t\t} else {\n\t\t\t// This is the first hook of its type.\n\t\t\thooksStore[ hookName ] = {\n\t\t\t\thandlers: [ handler ],\n\t\t\t\truns: 0,\n\t\t\t};\n\t\t}\n\n\t\tif ( hookName !== 'hookAdded' ) {\n\t\t\thooks.doAction(\n\t\t\t\t'hookAdded',\n\t\t\t\thookName,\n\t\t\t\tnamespace,\n\t\t\t\tcallback,\n\t\t\t\tpriority\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport default createAddHook;\n","/**\n * Internal dependencies\n */\nimport validateNamespace from './validateNamespace.js';\nimport validateHookName from './validateHookName.js';\n\n/**\n * @callback RemoveHook\n * Removes the specified callback (or all callbacks) from the hook with a given hookName\n * and namespace.\n *\n * @param {string} hookName  The name of the hook to modify.\n * @param {string} namespace The unique namespace identifying the callback in the\n *                           form `vendor/plugin/function`.\n *\n * @return {number | undefined} The number of callbacks removed.\n */\n\n/**\n * Returns a function which, when invoked, will remove a specified hook or all\n * hooks by the given name.\n *\n * @param {import('.').Hooks}    hooks             Hooks instance.\n * @param {import('.').StoreKey} storeKey\n * @param {boolean}              [removeAll=false] Whether to remove all callbacks for a hookName,\n *                                                 without regard to namespace. Used to create\n *                                                 `removeAll*` functions.\n *\n * @return {RemoveHook} Function that removes hooks.\n */\nfunction createRemoveHook( hooks, storeKey, removeAll = false ) {\n\treturn function removeHook( hookName, namespace ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\tif ( ! validateHookName( hookName ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! removeAll && ! validateNamespace( namespace ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Bail if no hooks exist by this name.\n\t\tif ( ! hooksStore[ hookName ] ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet handlersRemoved = 0;\n\n\t\tif ( removeAll ) {\n\t\t\thandlersRemoved = hooksStore[ hookName ].handlers.length;\n\t\t\thooksStore[ hookName ] = {\n\t\t\t\truns: hooksStore[ hookName ].runs,\n\t\t\t\thandlers: [],\n\t\t\t};\n\t\t} else {\n\t\t\t// Try to find the specified callback to remove.\n\t\t\tconst handlers = hooksStore[ hookName ].handlers;\n\t\t\tfor ( let i = handlers.length - 1; i >= 0; i-- ) {\n\t\t\t\tif ( handlers[ i ].namespace === namespace ) {\n\t\t\t\t\thandlers.splice( i, 1 );\n\t\t\t\t\thandlersRemoved++;\n\t\t\t\t\t// This callback may also be part of a hook that is\n\t\t\t\t\t// currently executing.  If the callback we're removing\n\t\t\t\t\t// comes after the current callback, there's no problem;\n\t\t\t\t\t// otherwise we need to decrease the execution index of any\n\t\t\t\t\t// other runs by 1 to account for the removed element.\n\t\t\t\t\thooksStore.__current.forEach( ( hookInfo ) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\thookInfo.name === hookName &&\n\t\t\t\t\t\t\thookInfo.currentIndex >= i\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\thookInfo.currentIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( hookName !== 'hookRemoved' ) {\n\t\t\thooks.doAction( 'hookRemoved', hookName, namespace );\n\t\t}\n\n\t\treturn handlersRemoved;\n\t};\n}\n\nexport default createRemoveHook;\n","/**\n * @callback HasHook\n *\n * Returns whether any handlers are attached for the given hookName and optional namespace.\n *\n * @param {string} hookName    The name of the hook to check for.\n * @param {string} [namespace] Optional. The unique namespace identifying the callback\n *                             in the form `vendor/plugin/function`.\n *\n * @return {boolean} Whether there are handlers that are attached to the given hook.\n */\n/**\n * Returns a function which, when invoked, will return whether any handlers are\n * attached to a particular hook.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {HasHook} Function that returns whether any handlers are\n *                   attached to a particular hook and optional namespace.\n */\nfunction createHasHook( hooks, storeKey ) {\n\treturn function hasHook( hookName, namespace ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\t// Use the namespace if provided.\n\t\tif ( 'undefined' !== typeof namespace ) {\n\t\t\treturn (\n\t\t\t\thookName in hooksStore &&\n\t\t\t\thooksStore[ hookName ].handlers.some(\n\t\t\t\t\t( hook ) => hook.namespace === namespace\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn hookName in hooksStore;\n\t};\n}\n\nexport default createHasHook;\n","/**\n * Returns a function which, when invoked, will execute all callbacks\n * registered to a hook of the specified type, optionally returning the final\n * value of the call chain.\n *\n * @param {import('.').Hooks}    hooks          Hooks instance.\n * @param {import('.').StoreKey} storeKey\n * @param {boolean}              returnFirstArg Whether each hook callback is expected to return its first argument.\n * @param {boolean}              async          Whether the hook callback should be run asynchronously\n *\n * @return {(hookName:string, ...args: unknown[]) => undefined|unknown} Function that runs hook callbacks.\n */\nfunction createRunHook( hooks, storeKey, returnFirstArg, async ) {\n\treturn function runHook( hookName, ...args ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\tif ( ! hooksStore[ hookName ] ) {\n\t\t\thooksStore[ hookName ] = {\n\t\t\t\thandlers: [],\n\t\t\t\truns: 0,\n\t\t\t};\n\t\t}\n\n\t\thooksStore[ hookName ].runs++;\n\n\t\tconst handlers = hooksStore[ hookName ].handlers;\n\n\t\t// The following code is stripped from production builds.\n\t\tif ( 'production' !== process.env.NODE_ENV ) {\n\t\t\t// Handle any 'all' hooks registered.\n\t\t\tif ( 'hookAdded' !== hookName && hooksStore.all ) {\n\t\t\t\thandlers.push( ...hooksStore.all.handlers );\n\t\t\t}\n\t\t}\n\n\t\tif ( ! handlers || ! handlers.length ) {\n\t\t\treturn returnFirstArg ? args[ 0 ] : undefined;\n\t\t}\n\n\t\tconst hookInfo = {\n\t\t\tname: hookName,\n\t\t\tcurrentIndex: 0,\n\t\t};\n\n\t\tasync function asyncRunner() {\n\t\t\ttry {\n\t\t\t\thooksStore.__current.add( hookInfo );\n\t\t\t\tlet result = returnFirstArg ? args[ 0 ] : undefined;\n\t\t\t\twhile ( hookInfo.currentIndex < handlers.length ) {\n\t\t\t\t\tconst handler = handlers[ hookInfo.currentIndex ];\n\t\t\t\t\tresult = await handler.callback.apply( null, args );\n\t\t\t\t\tif ( returnFirstArg ) {\n\t\t\t\t\t\targs[ 0 ] = result;\n\t\t\t\t\t}\n\t\t\t\t\thookInfo.currentIndex++;\n\t\t\t\t}\n\t\t\t\treturn returnFirstArg ? result : undefined;\n\t\t\t} finally {\n\t\t\t\thooksStore.__current.delete( hookInfo );\n\t\t\t}\n\t\t}\n\n\t\tfunction syncRunner() {\n\t\t\ttry {\n\t\t\t\thooksStore.__current.add( hookInfo );\n\t\t\t\tlet result = returnFirstArg ? args[ 0 ] : undefined;\n\t\t\t\twhile ( hookInfo.currentIndex < handlers.length ) {\n\t\t\t\t\tconst handler = handlers[ hookInfo.currentIndex ];\n\t\t\t\t\tresult = handler.callback.apply( null, args );\n\t\t\t\t\tif ( returnFirstArg ) {\n\t\t\t\t\t\targs[ 0 ] = result;\n\t\t\t\t\t}\n\t\t\t\t\thookInfo.currentIndex++;\n\t\t\t\t}\n\t\t\t\treturn returnFirstArg ? result : undefined;\n\t\t\t} finally {\n\t\t\t\thooksStore.__current.delete( hookInfo );\n\t\t\t}\n\t\t}\n\n\t\treturn ( async ? asyncRunner : syncRunner )();\n\t};\n}\n\nexport default createRunHook;\n","/**\n * Returns a function which, when invoked, will return the name of the\n * currently running hook, or `null` if no hook of the given type is currently\n * running.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {() => string | null} Function that returns the current hook name or null.\n */\nfunction createCurrentHook( hooks, storeKey ) {\n\treturn function currentHook() {\n\t\tconst hooksStore = hooks[ storeKey ];\n\t\tconst currentArray = Array.from( hooksStore.__current );\n\t\treturn currentArray.at( -1 )?.name ?? null;\n\t};\n}\n\nexport default createCurrentHook;\n","/**\n * @callback DoingHook\n * Returns whether a hook is currently being executed.\n *\n * @param {string} [hookName] The name of the hook to check for.  If\n *                            omitted, will check for any hook being executed.\n *\n * @return {boolean} Whether the hook is being executed.\n */\n\n/**\n * Returns a function which, when invoked, will return whether a hook is\n * currently being executed.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {DoingHook} Function that returns whether a hook is currently\n *                     being executed.\n */\nfunction createDoingHook( hooks, storeKey ) {\n\treturn function doingHook( hookName ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\t// If the hookName was not passed, check for any current hook.\n\t\tif ( 'undefined' === typeof hookName ) {\n\t\t\treturn hooksStore.__current.size > 0;\n\t\t}\n\n\t\t// Find if the `hookName` hook is in `__current`.\n\t\treturn Array.from( hooksStore.__current ).some(\n\t\t\t( hook ) => hook.name === hookName\n\t\t);\n\t};\n}\n\nexport default createDoingHook;\n","/**\n * Internal dependencies\n */\nimport validateHookName from './validateHookName.js';\n\n/**\n * @callback DidHook\n *\n * Returns the number of times an action has been fired.\n *\n * @param {string} hookName The hook name to check.\n *\n * @return {number | undefined} The number of times the hook has run.\n */\n\n/**\n * Returns a function which, when invoked, will return the number of times a\n * hook has been called.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {DidHook} Function that returns a hook's call count.\n */\nfunction createDidHook( hooks, storeKey ) {\n\treturn function didHook( hookName ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\tif ( ! validateHookName( hookName ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn hooksStore[ hookName ] && hooksStore[ hookName ].runs\n\t\t\t? hooksStore[ hookName ].runs\n\t\t\t: 0;\n\t};\n}\n\nexport default createDidHook;\n","/**\n * Internal dependencies\n */\nimport createAddHook from './createAddHook';\nimport createRemoveHook from './createRemoveHook';\nimport createHasHook from './createHasHook';\nimport createRunHook from './createRunHook';\nimport createCurrentHook from './createCurrentHook';\nimport createDoingHook from './createDoingHook';\nimport createDidHook from './createDidHook';\n\n/**\n * Internal class for constructing hooks. Use `createHooks()` function\n *\n * Note, it is necessary to expose this class to make its type public.\n *\n * @private\n */\nexport class _Hooks {\n\tconstructor() {\n\t\t/** @type {import('.').Store} actions */\n\t\tthis.actions = Object.create( null );\n\t\tthis.actions.__current = new Set();\n\n\t\t/** @type {import('.').Store} filters */\n\t\tthis.filters = Object.create( null );\n\t\tthis.filters.__current = new Set();\n\n\t\tthis.addAction = createAddHook( this, 'actions' );\n\t\tthis.addFilter = createAddHook( this, 'filters' );\n\t\tthis.removeAction = createRemoveHook( this, 'actions' );\n\t\tthis.removeFilter = createRemoveHook( this, 'filters' );\n\t\tthis.hasAction = createHasHook( this, 'actions' );\n\t\tthis.hasFilter = createHasHook( this, 'filters' );\n\t\tthis.removeAllActions = createRemoveHook( this, 'actions', true );\n\t\tthis.removeAllFilters = createRemoveHook( this, 'filters', true );\n\t\tthis.doAction = createRunHook( this, 'actions', false, false );\n\t\tthis.doActionAsync = createRunHook( this, 'actions', false, true );\n\t\tthis.applyFilters = createRunHook( this, 'filters', true, false );\n\t\tthis.applyFiltersAsync = createRunHook( this, 'filters', true, true );\n\t\tthis.currentAction = createCurrentHook( this, 'actions' );\n\t\tthis.currentFilter = createCurrentHook( this, 'filters' );\n\t\tthis.doingAction = createDoingHook( this, 'actions' );\n\t\tthis.doingFilter = createDoingHook( this, 'filters' );\n\t\tthis.didAction = createDidHook( this, 'actions' );\n\t\tthis.didFilter = createDidHook( this, 'filters' );\n\t}\n}\n\n/** @typedef {_Hooks} Hooks */\n\n/**\n * Returns an instance of the hooks object.\n *\n * @return {Hooks} A Hooks instance.\n */\nfunction createHooks() {\n\treturn new _Hooks();\n}\n\nexport default createHooks;\n","/**\n * Internal dependencies\n */\nimport createHooks from './createHooks';\n\n/** @typedef {(...args: any[])=>any} Callback */\n\n/**\n * @typedef Handler\n * @property {Callback} callback  The callback\n * @property {string}   namespace The namespace\n * @property {number}   priority  The namespace\n */\n\n/**\n * @typedef Hook\n * @property {Handler[]} handlers Array of handlers\n * @property {number}    runs     Run counter\n */\n\n/**\n * @typedef Current\n * @property {string} name         Hook name\n * @property {number} currentIndex The index\n */\n\n/**\n * @typedef {Record<string, Hook> & {__current: Set<Current>}} Store\n */\n\n/**\n * @typedef {'actions' | 'filters'} StoreKey\n */\n\n/**\n * @typedef {import('./createHooks').Hooks} Hooks\n */\n\nexport const defaultHooks = createHooks();\n\nconst {\n\taddAction,\n\taddFilter,\n\tremoveAction,\n\tremoveFilter,\n\thasAction,\n\thasFilter,\n\tremoveAllActions,\n\tremoveAllFilters,\n\tdoAction,\n\tdoActionAsync,\n\tapplyFilters,\n\tapplyFiltersAsync,\n\tcurrentAction,\n\tcurrentFilter,\n\tdoingAction,\n\tdoingFilter,\n\tdidAction,\n\tdidFilter,\n\tactions,\n\tfilters,\n} = defaultHooks;\n\nexport {\n\tcreateHooks,\n\taddAction,\n\taddFilter,\n\tremoveAction,\n\tremoveFilter,\n\thasAction,\n\thasFilter,\n\tremoveAllActions,\n\tremoveAllFilters,\n\tdoAction,\n\tdoActionAsync,\n\tapplyFilters,\n\tapplyFiltersAsync,\n\tcurrentAction,\n\tcurrentFilter,\n\tdoingAction,\n\tdoingFilter,\n\tdidAction,\n\tdidFilter,\n\tactions,\n\tfilters,\n};\n","/**\n * Internal dependencies\n */\nimport { createI18n } from './create-i18n';\n\n/**\n * WordPress dependencies\n */\nimport { defaultHooks } from '@wordpress/hooks';\n\nconst i18n = createI18n( undefined, undefined, defaultHooks );\n\n/**\n * Default, singleton instance of `I18n`.\n */\nexport default i18n;\n\n/*\n * Comments in this file are duplicated from ./i18n due to\n * https://github.com/WordPress/gutenberg/pull/20318#issuecomment-590837722\n */\n\n/**\n * @typedef {import('./create-i18n').LocaleData} LocaleData\n * @typedef {import('./create-i18n').SubscribeCallback} SubscribeCallback\n * @typedef {import('./create-i18n').UnsubscribeCallback} UnsubscribeCallback\n */\n\n/**\n * Returns locale data by domain in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {string} [domain] Domain for which to get the data.\n * @return {LocaleData} Locale data.\n */\nexport const getLocaleData = i18n.getLocaleData.bind( i18n );\n\n/**\n * Merges locale data into the Tannin instance by domain. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\nexport const setLocaleData = i18n.setLocaleData.bind( i18n );\n\n/**\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\nexport const resetLocaleData = i18n.resetLocaleData.bind( i18n );\n\n/**\n * Subscribes to changes of locale data\n *\n * @param {SubscribeCallback} callback Subscription callback\n * @return {UnsubscribeCallback} Unsubscribe callback\n */\nexport const subscribe = i18n.subscribe.bind( i18n );\n\n/**\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n *\n * @param {string} text     Text to translate.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated text.\n */\nexport const __ = i18n.__.bind( i18n );\n\n/**\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n *\n * @param {string} text     Text to translate.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated context string without pipe.\n */\nexport const _x = i18n._x.bind( i18n );\n\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\nexport const _n = i18n._n.bind( i18n );\n\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\nexport const _nx = i18n._nx.bind( i18n );\n\n/**\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n *\n * @return {boolean} Whether locale is RTL.\n */\nexport const isRTL = i18n.isRTL.bind( i18n );\n\n/**\n * Check if there is a translation for a given string (in singular form).\n *\n * @param {string} single    Singular form of the string to look up.\n * @param {string} [context] Context information for the translators.\n * @param {string} [domain]  Domain to retrieve the translated text.\n * @return {boolean} Whether the translation exists or not.\n */\nexport const hasTranslation = i18n.hasTranslation.bind( i18n );\n","import { __, sprintf } from '@wordpress/i18n';\nimport { InspectorControls, useBlockProps } from '@wordpress/block-editor';\nimport { SelectControl, PanelBody } from '@wordpress/components';\n\nconst { forms = [] } = window.zigaformData || {};\n\nexport default function Edit({ attributes, setAttributes }) {\n    const { formId = 0 } = attributes;\n    const blockProps = useBlockProps();\n    const selectedForm = forms.find((f) => parseInt(f.id, 10) === parseInt(formId, 10));\n    return (\n        <div {...blockProps}>\n            <InspectorControls>\n                <PanelBody title={ __('Form Settings', 'FRocket_admin') }>\n                    <SelectControl\n                        label={ __('Select Form', 'FRocket_admin') }\n                        value={ formId }\n                        options={[\n                            { label: __('— Select —', 'FRocket_admin'), value: 0 },\n                            ...forms.map((f) => ({ label: f.name, value: f.id })),\n                        ]}\n                        onChange={(value) => setAttributes({ formId: parseInt(value, 10) })}\n                    />\n                </PanelBody>\n            </InspectorControls>\n\n            <p>\n                {formId && selectedForm ? (\n                    <>\n                        {sprintf(__('Form #%d — ', 'FRocket_admin'), formId)}\n                        <strong>{selectedForm.name}</strong>\n                        {__(' will be displayed on the front-end.', 'FRocket_admin')}\n                    </>\n                ) : (\n                    __('Select a form in the sidebar →', 'FRocket_admin')\n                )}\n            </p>\n\n        </div>\n    );\n}\n","import { registerBlockType } from '@wordpress/blocks';\nimport Edit from './edit';\n\n/* Load styles */\nimport './style.scss';   // frontend\nimport './editor.scss';  // editor\n\nregisterBlockType('zigaform/form-shortcode', {\n\tedit: Edit,\n\tsave() {\n\t\treturn null;\n\t},\n});\n"],"sourceRoot":""}